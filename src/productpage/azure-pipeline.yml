pool:
  vmImage: 'ubuntu-20.04'

trigger:
  branches:
    include:
    - main
  paths:
    include:
    - /src/productpage/

resources:
- repo: self

variables:
  remote_tag: $(CONTAINERREGISTRYLOGINSERVER)/$(CONTAINERREPOSITORY)/$(CONTAINERNAME):latest

stages:
- stage: Build
  displayName: Build Stage
  jobs:
  - job: Build
    displayName: Build Image
    steps:
    - task: Bash@3
      displayName: Login to Azure
      inputs:
        targetType: 'inline'
        script: 'az login -u $(AZUREUSERNAME) -p $(AZUREPASSWORD)'
    - task: Bash@3
      displayName: Login to Container Registry
      inputs:
        targetType: 'inline'
        script: 'az acr login --name $(CONTAINERREGISTRYNAME)'
    - task: Docker@2
      displayName: Build Image
      inputs:
        command: 'build'
        Dockerfile: '$(Build.SourcesDirectory)/src/productpage/Dockerfile'
        arguments: '-t $(remote_tag)'
    - task: SonarCloudPrepare@1
      displayName: 'Prepare analysis configuration'
      inputs:
        SonarCloud: 'SonarCloud Bookinfo'
        organization: 'ammerzon'
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: '$(SonarCloud Project Key)'
        cliProjectName: 'Productpage'
        cliSources: '.'
    - task: SonarCloudAnalyze@1
      displayName: 'Run SonarCloud analysis'
    - task: SonarCloudPublish@1
      displayName: 'Publish results on build summary'
    - task: Bash@3
      displayName: Push Image
      inputs:
        targetType: 'inline'
        script: 'docker push $(remote_tag)'
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)/kubernetes'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/kubernetes'
        flattenFolders: true
    - task: PublishBuildArtifacts@1
      displayName: Publish Artifact
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
